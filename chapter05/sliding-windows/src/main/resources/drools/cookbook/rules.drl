package drools.cookbook;

import drools.cookbook.model.FlightStatus
import drools.cookbook.model.FlightControl
import drools.cookbook.model.EmergencySignal

import drools.cookbook.model.EmergencyInCourse

declare FlightStatus
    @role(event)
end

declare EmergencySignal
    @role(event)
end

rule "First contact"
salience 100
when
    $currentFlight : FlightStatus() from entry-point "flight-control"
    not (exists (FlightStatus(this != $currentFlight, flight == $currentFlight.flight) from entry-point "flight-control"))
    $control : FlightControl()
then
    $control.addFlight($currentFlight);
    System.out.println("First contact with Flight " + $currentFlight.getFlight());
end

rule "flight arrival"
when
    $flight : FlightStatus() from entry-point "flight-arrival"
    $control : FlightControl();
    // Obtain resources to prepare the flight landing
then
    System.out.println("Flight " + $flight.getFlight() + " arriving to " + $control.getAirport() + ". Sending instructions");
    // Send instructions to arriving flight
end

rule "flight average speed"
when
    $flight : FlightStatus() from entry-point "flight-control"
    $averageSpeed : Number(floatValue > 0) from accumulate(FlightStatus(flight==$flight.flight, $speed:speed) over window:length(5) 
                                                          from entry-point "flight-control",
                                                          average($speed))
then
    System.out.println($flight.getFlight() + " average speed: " + $averageSpeed);
end

rule "emergency system"
when
    $emergency : EmergencySignal() from entry-point "emergency-channel";
    FlightStatus(flight==$emergency.flight, this before[0m, 10m] $emergency) from entry-point "flight-arrival";
then
    // Emergency in curse
    System.out.println("Emergency in progress. Flight " + $emergency.getFlight());
    insert (new EmergencyInCourse($emergency.flight));
end