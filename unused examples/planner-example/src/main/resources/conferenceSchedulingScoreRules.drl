package drools.cookbook.chapter08;

import org.drools.planner.core.score.constraint.IntConstraintOccurrence;
import org.drools.planner.core.score.calculator.SimpleScoreCalculator;
import drools.cookbook.chapter08.domain.Room;
import drools.cookbook.chapter08.domain.Talk;

global SimpleScoreCalculator scoreCalculator;

rule "roomSize"
    when
        $r : Room($talks : talks)
        $t : Talk(requiredRoomSize > $r.size) from $talks
    then
        insertLogical(new IntConstraintOccurrence("roomSize", 1, $r));
end

rule "hardConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $hardTotal : Number() from accumulate(
            IntConstraintOccurrence($weight : weight),
            sum($weight)
        );
    then
        scoreCalculator.setScore(- $hardTotal.intValue());
end
